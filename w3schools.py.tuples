--------------------------------------------------------------'''Python Tuples'''----------------------------------------------------------------------------
'''Example 1'''
Create a Tuple:

thistuple = ("apple", "banana", "cherry")
print(thistuple)

'''Example 2'''
thistuple = ("apple", "banana", "cherry", "apple", "cherry")
print(thistuple)

'''Example 3'''
Print the number of items in the tuple:

thistuple = ("apple", "banana", "cherry")
print(len(thistuple))

'''Example 4'''
One item tuple, remember the comma:

thistuple = ("apple",)
print(type(thistuple))

#NOT a tuple
thistuple = ("apple")
print(type(thistuple))

'''Example 5'''
String, int and boolean data types:

tuple1 = ("apple", "banana", "cherry")
tuple2 = (1, 5, 7, 9, 3)
tuple3 = (True, False, False) 

'''Example 6'''
A tuple with strings, integers and boolean values:

tuple1 = ("abc", 34, True, 40, "male") 

'''Example 7'''
What is the data type of a tuple?

mytuple = ("apple", "banana", "cherry")
print(type(mytuple))

'''Example 8'''
Using the tuple() method to make a tuple:

thistuple = tuple(("apple", "banana", "cherry")) # note the double round-brackets
print(thistuple)
--------------------------------------------------------------'''Access Tuples'''----------------------------------------------------------------------------
'''Example 1'''
Print the second item in the tuple:

thistuple = ("apple", "banana", "cherry")
print(thistuple[1])

'''Example 2'''
Print the last item of the tuple:

thistuple = ("apple", "banana", "cherry")
print(thistuple[-1])

'''Example 3'''
Return the third, fourth, and fifth item:

thistuple = ("apple", "banana", "cherry", "orange", "kiwi", "melon", "mango")
print(thistuple[2:5])

'''Example 4'''
This example returns the items from the beginning to, but NOT included, "kiwi":

thistuple = ("apple", "banana", "cherry", "orange", "kiwi", "melon", "mango")
print(thistuple[:4])

'''Example 5'''
This example returns the items from "cherry" and to the end:

thistuple = ("apple", "banana", "cherry", "orange", "kiwi", "melon", "mango")
print(thistuple[2:])

'''Example 6'''
This example returns the items from index -4 (included) to index -1 (excluded)

thistuple = ("apple", "banana", "cherry", "orange", "kiwi", "melon", "mango")
print(thistuple[-4:-1])

'''Example 7'''
Check if "apple" is present in the tuple:

thistuple = ("apple", "banana", "cherry")
if "apple" in thistuple:
  print("Yes, 'apple' is in the fruits tuple")
  --------------------------------------------------------------'''Update Tuples'''----------------------------------------------------------------------------
'''Example 1'''
Convert the tuple into a list to be able to change it:

x = ("apple", "banana", "cherry")
y = list(x)
y[1] = "kiwi"
x = tuple(y)

print(x)

'''Example 2'''
Convert the tuple into a list, add "orange", and convert it back into a tuple:

thistuple = ("apple", "banana", "cherry")
y = list(thistuple)
y.append("orange")
thistuple = tuple(y)

'''Example 3'''
Create a new tuple with the value "orange", and add that tuple:

thistuple = ("apple", "banana", "cherry")
y = ("orange",)
thistuple += y

print(thistuple)

'''Example 4'''
Convert the tuple into a list, remove "apple", and convert it back into a tuple:

thistuple = ("apple", "banana", "cherry")
y = list(thistuple)
y.remove("apple")
thistuple = tuple(y)

'''Example 5'''
The del keyword can delete the tuple completely:

thistuple = ("apple", "banana", "cherry")
del thistuple
print(thistuple) #this will raise an error because the tuple no longer exists
 --------------------------------------------------------------'''Unpack Tuples'''----------------------------------------------------------------------------
'''Example 1'''
Packing a tuple:

fruits = ("apple", "banana", "cherry")

'''Example 2'''
Unpacking a tuple:

fruits = ("apple", "banana", "cherry")

(green, yellow, red) = fruits

print(green)
print(yellow)
print(red)

'''Example 3'''
Assign the rest of the values as a list called "red":

fruits = ("apple", "banana", "cherry", "strawberry", "raspberry")

(green, yellow, *red) = fruits

print(green)
print(yellow)
print(red)

'''Example 4'''
Add a list of values the "tropic" variable:

fruits = ("apple", "mango", "papaya", "pineapple", "cherry")

(green, *tropic, red) = fruits

print(green)
print(tropic)
print(red)
--------------------------------------------------------------'''Loop Tuples'''----------------------------------------------------------------------------
'''Example 1'''
Iterate through the items and print the values:

thistuple = ("apple", "banana", "cherry")
for x in thistuple:
  print(x)
  
'''Example 2'''
Print all items by referring to their index number:

thistuple = ("apple", "banana", "cherry")
for i in range(len(thistuple)):
  print(thistuple[i])
  
'''Example 3'''
Print all items, using a while loop to go through all the index numbers:

thistuple = ("apple", "banana", "cherry")
i = 0
while i < len(thistuple):
  print(thistuple[i])
  i = i + 1
  --------------------------------------------------------------'''Join Tuples'''----------------------------------------------------------------------------
'''Example 1'''
Join two tuples:

tuple1 = ("a", "b" , "c")
tuple2 = (1, 2, 3)

tuple3 = tuple1 + tuple2
print(tuple3)

'''Example 2'''
Multiply the fruits tuple by 2:

fruits = ("apple", "banana", "cherry")
mytuple = fruits * 2

print(mytuple)
--------------------------------------------------------------'''Tuple Methods'''----------------------------------------------------------------------------
Python has two built-in methods that you can use on tuples.

Method	Description
count()	Returns the number of times a specified value occurs in a tuple
index()	Searches the tuple for a specified value and returns the position of where it was found
  
